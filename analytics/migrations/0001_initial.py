# Generated by Django 5.2.1 on 2025-05-22 09:33

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('processed_records', models.IntegerField(default=0)),
                ('software_engineer_records', models.IntegerField(default=0)),
                ('processing_notes', models.TextField(blank=True)),
                ('is_processed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Data Upload',
                'verbose_name_plural': 'Data Uploads',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='PageContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(choices=[('main', 'Main Page'), ('general_stats', 'General Statistics'), ('demand', 'Demand Analysis'), ('geography', 'Geography Analysis'), ('skills', 'Skills Analysis'), ('latest_vacancies', 'Latest Vacancies')], max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('content_html', models.TextField(blank=True, help_text='HTML content for the page body')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Page Content',
                'verbose_name_plural': 'Page Contents',
            },
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_title', models.CharField(default='Software Engineer Analytics Hub', max_length=200)),
                ('site_description', models.TextField(default='Comprehensive analytics for Software Engineer profession')),
                ('footer_text', models.TextField(default='Студент: Иванов Иван Иванович | Группа: ИВТ-21-1 | Курс: Анализ данных и визуализация')),
                ('profession_keywords', models.TextField(default='инженер, инженер-программист, инженер, ИТ-инженер, инженер-разработчик', help_text='Keywords for identifying Software Engineer positions (comma-separated)')),
                ('hh_api_enabled', models.BooleanField(default=False)),
                ('max_api_requests', models.IntegerField(default=10)),
            ],
            options={
                'verbose_name': 'Site Configuration',
                'verbose_name_plural': 'Site Configuration',
            },
        ),
        migrations.CreateModel(
            name='StatisticalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(choices=[('salary_dynamics', 'Salary Dynamics by Year'), ('vacancy_count', 'Vacancy Count by Year'), ('salary_by_city', 'Salary by City'), ('vacancy_by_city', 'Vacancy by City'), ('top_skills', 'Top Skills'), ('demand_salary', 'Software Engineer Salary Dynamics'), ('demand_vacancy', 'Software Engineer Vacancy Count'), ('geo_salary', 'Geographic Salary Analysis'), ('geo_vacancy', 'Geographic Vacancy Analysis'), ('skills_by_year', 'Skills by Year Analysis')], max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('chart_image', models.ImageField(help_text='Upload chart as PNG, JPG, or SVG file', upload_to='charts/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'svg'])])),
                ('table_html', models.TextField(blank=True, help_text='HTML table with statistical data')),
                ('raw_data', models.JSONField(blank=True, help_text='Raw data in JSON format for charts', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Statistical Data',
                'verbose_name_plural': 'Statistical Data',
            },
        ),
        migrations.CreateModel(
            name='VacancyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vacancy_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True)),
                ('key_skills', models.TextField(blank=True)),
                ('experience', models.CharField(blank=True, max_length=100)),
                ('employment', models.CharField(blank=True, max_length=100)),
                ('schedule', models.CharField(blank=True, max_length=100)),
                ('salary_from', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('salary_to', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('salary_currency', models.CharField(blank=True, max_length=10)),
                ('salary_gross', models.BooleanField(blank=True, null=True)),
                ('employer_name', models.CharField(blank=True, max_length=300)),
                ('area_name', models.CharField(blank=True, max_length=200)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_software_engineer', models.BooleanField(default=False, help_text='Is this a Software Engineer position?')),
                ('salary_in_rub', models.DecimalField(blank=True, decimal_places=2, help_text='Salary converted to RUB', max_digits=12, null=True)),
            ],
            options={
                'verbose_name': 'Vacancy Data',
                'verbose_name_plural': 'Vacancy Data',
                'ordering': ['-published_at'],
            },
        ),
    ]
